{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || (2048 / this.getPrecision());\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        let lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        let realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            let resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            let words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ',letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ' ' + words[j];\n                }\n            }\n\n            resultLines.push(result);\n            result = '';\n\n            allLines = allLines.concat(resultLines);\n\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n\n        return {l: allLines, n: realNewlines};\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    \n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = Utils.isSpark ? this._stage.platform.getFontSetting(this) : this._getFontSetting();\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _getFontSetting() {\n        let ff = this._settings.fontFace;\n\n        if (!Array.isArray(ff)) {\n            ff = [ff];\n        }\n\n        let ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === \"serif\" || ff[i] === \"sans-serif\") {\n                ffs.push(ff[i]);\n            } else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(\",\")}`\n    }\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : 2048 / precision;\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else if (renderInfo.lineHeight > fontSize) {\n            // When lineheight is larger than the font size we're rendering, we set the height of the canvas based on the number of lines we're rendering.\n            // This makes each \"line\" a containing box that is line height sized, and text is positioned inside that box.\n            //\n            // Ideographic fonts may break this model, and require additional space?\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (lastWord == ' ' || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont)[0];\n            suffix.lineNo = index;\n            if (lastLineText.length) {\n                suffix.x = lastLineText[lastLineText.length - 1].x + lastLineText[lastLineText.length - 1].width;\n            } else {\n                suffix.x = 0;\n            }\n            lastLineText.push(suffix)\n\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || lastLineText[lastLineText.length - 2].text == ' ') {\n                lastLineText.splice(lastLineText.length - 2, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                const prev = lastLineText[lastLineText.length - 2] || {x: 0, width: 0}\n                suffix.x = prev.x + prev.width;\n                if (lastLineText.length < 2) {\n                    break;\n                }\n            }\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum; \n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n \n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n\n    tokenize(text) {\n        const re =/ |\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g\n    \n        const delimeters = text.match(re) || [];\n        const words = text.split(re) || [];\n    \n        let final = [];\n        for (let i = 0; i < words.length; i++) {\n            final.push(words[i], delimeters[i])\n        }\n        final.pop()\n        return final.filter((word) => word != '');\n    \n    }\n    \n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n    \n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length\n        const wordWidth = this._context.measureText(word).width;\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        // Inherit font face from stage.\n        if (args.fontFace === null) {\n            args.fontFace = this.stage.getOption('defaultFontFace');\n        }\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOfScreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n            this._program = null;\n        }\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n            }\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts);\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp',{precision:0.6666666667, fontSize: 24})\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y){\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x,y,children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while(true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while(n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true; \n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                child._handleClick(target);\n                break;\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const {clientX, clientY} = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const {clientX, clientY} = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a,b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1: -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision();\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","v1","v2","p","r","g","b","a","color","toFixed","Math","floor","argb","rgba","max","min","v","c1","c2","round","c","t","n","length","i","r1","g1","b1","a1","alpha","deg","PI","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","str","getTimingBezier","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","Utils","value","isObjectLiteral","Array","isArray","getDeepClone","obj","keys","Object","clone","obj1","obj2","type","constructor","index","arr","getModuloIndex","len","ceil","isFunction","isObject","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","result","forEach","push","iterator","iteratorResult","next","done","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","isNode","isPS4","isZiggo","Base","name","settings","names","patchObjectProperty","error","setter","setSetting","defaultSetter","charAt","__local","func","SpacingCalculator","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","getSpacing","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_lines","_getTotalCrossAxisSize","crossAxisSize","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","align","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","pos","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","_horizontal","resizeMainAxis","resizeCrossAxis","setAxisLayoutSize","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","SizeGrower","_grownSize","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","grow","maxSize","_getMainAxisMaxSizeSetting","maxGrow","ItemPositioner","lineLayout","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","getGrownSize","shrinker","getShrunkSize","position","_calcCrossAxisMaxLayoutSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","performLayout","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","getMainAxisMinSize","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","finalize","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","layoutLines","mainAxisContentSize","init","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","changedDimensions","changedContents","f","direction","_changedContents","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","_changedDimensions","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","setAxisLayoutPos","resizeAxis","getTotalMargin","getMarginOffset","_getMainAxisPadding","_getMainAxisMargin","_getCrossAxisLayoutSize","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","isChanged","layoutTree","_enableFlex","patch","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","shrunk","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","has","add","delete","becomesUsed","becomesUnused","cb","texture","elements","element","active","isUsed","load","cancel","isLoading","free","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","update","frameCounter","forEachActiveElement","forceRenderUpdate","_updateTextureCoords","newNativeTexture","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","forEachEnabledElement","_updateDimensions","e","onTextureSourceLoadError","isLoaded","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","textureManager","updateResultTexture","hasEnabledElements","resultTexture","getResultTexture","nativeTexture","replaceNativeTexture","core","_hasRenderUpdates","release","releaseRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","setOriginalXWithoutUpdatingLayout","_updateLocalTranslateDelta","forceLayout","_triggerRecalcTranslate","_disableFuncY","setOriginalYWithoutUpdatingLayout","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","setVisible","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removed","added","order","fromIndex","toIndex","isEstimate","ulx","uly","brx","bry","textureSource","root","coordsWidth","coordsHeight","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","isAncestorOf","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","texturizer","_enableRenderToTexture","_disableRenderToTexture","_setShaderOwnerChildrenRecursive","_renderAdvanced","_stashedTexCoords","_stashedColors","layoutFlexTree","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","_hasRenderContext","updateTreeOrder","useRenderToTexture","mustRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","hasRenderTexture","renderToTextureCount","cleared","ignore","cache","hasResultTexture","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","reuseTextureAsRenderTexture","renderTextureReused","getRenderTexture","setTexturizer","_stashTexCoords","colorize","_stashColors","_unstashColors","_unstashTexCoords","ptr","m","j","sort","mergeResult","relX","relY","inBound","inScissor","collectAtCoord","tx","ty","getCornerPoints","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","l","listeners","map","object","addAsMixin","cls","once","removeListener","emit","listenerCount","removeAllListeners","Shader","coreContext","_initialized","_elements","cleanup","renderer","createShader","isShader","isValidShaderType","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","addTexture","incActiveCount","removeTexture","decActiveCount","_checkForNewerReusableTextureSource","incActiveTextureCount","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","decActiveTextureCount","_getIsValid","_updateSource","addUpdateSourceTexture","_getTextureSource","_getLookupId","getTextureSource","_getSourceLoader","getReusableTextureSource","newSource","oldSource","loadError","clipX","clipY","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","_clearResizeMode","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","nonDefaults","precision","isAutosizeTexture","getRenderWidth","getRenderHeight","isTexture","ImageTexture","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","font","getFontSetting","_getFontSetting","textBaseline","ff","fontFace","ffs","fontStyle","fontSize","getPrecision","document","fonts","fontSetting","check","text","catch","then","loadPromise","_load","drawText","_draw","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","setFontProperties","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","measureText","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","_calculateRenderInfo","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","concat","space","reduce","acc","char","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","firstWord","lastWord","shift","pop","lastLineText","filter","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","letters","re","delimeters","match","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","parsed","applyFontStyle","breakIndex","totalWidth","_getBreakIndex","TextTexture","_this","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","draw","texParams","sharpCfg","sharpen","isBoolean","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","targetValue","isAttached","reset","delay","_updateDrawValue","removeActive","stop","addActive","getDrawValue","attached","dt","delayLeft","duration","invokeListeners","timingFunctionImpl","_timingFunctionImpl","startValue","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","removeAt","onRemove","onSync","isItem","_setByObject","_setByArray","refs","_getRefs","crefs","cref","idx","array","same","_equalsArray","marker","newItems","_setItems","prevItems","get","ElementChildList","prevChildList","childList","removeChildAt","_setParent","_connectParent","addChildAt","gc","syncChildren","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","isUcChar","_throwError","removeTag","clearRef","_addTag","setRef","setAsRoot","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","depth","levels","getDepth","getAncestor","o1","o2","l1","l2","_isEnabled","withinBoundsMargin","newAttached","_isAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","addElement","_setActiveFlag","_unsetActiveFlag","removeElement","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","deactivate","_onInactive","_getRenderWidth","_getRenderHeight","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","setDisplayedTextureSource","unknownSize","_onResize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","setTextureCoords","tag","tags","iteratorToArray","tagSet","parentTreeTags","comp","Map","set","setToArray","removes","adds","hasTag","currentTags","addTag","list","mtag","values","_tag","res","_getByTag","level","resn","path","select","selectors","_select","isRef","pointIdx","arrowIdx","_selectChilds","subPath","localTags","getTags","getLocationString","getSettings","getPrettyString","getNonDefaults","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","disableFuncW","disableFuncH","_collision","collision","setTags","_allowChildrenAccess","rectangleTexture","enableTextTexture","isString","onUpdate","onAfterCalcs","onAfterUpdate","create","rtt","paths","firstCharCode","remove","message","animations","createAnimation","_getTransition","_setTransition","transition","setSmooth","_transitions","finish","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","start","tree","hasChildren","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","toLowerCase","isColorProperty","mergeColors","mergeNumbers","getAt","properties","props","key","StateMachine","setupStateMachine","event","_hasMethod","_state","__path","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","context","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","apply","_stateIndex","__index","_routedType","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","_initStateMachine","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","arguments","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","stateMap","members","_getStateMemberNames","_getStateMemberNamesForType","_isStateLocalMember","_createStateMap","_addState","parentState","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","_getState","application","updateFocusPath","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","_this2","__obj","__prop","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","newTarget","prevTarget","_focusPath","cparent","ancestor","getSharedAncestor","isComponent","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","startsWith","_doFireAncestors","fire","__propertyBinding","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","isNumber","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","CoreQuadOperation","shaderOwner","scissor","quads","getTexture","getElementCore","getElement","renderWidth","renderHeight","getTextureWidth","getTextureHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","getAttribsDataByteOffset","coords","getRenderTextureCoords","renderExec","_projection","projection","CoreRenderExecutor","_bindRenderTexture","_setScissor","_clearRenderTexture","_reset","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","addEmpty","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","clear","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","useDefault","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","location","getUniformLocation","getAttribLocation","glFunction","_valueEquals","clonedValue","_valueClone","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","call","WebGLShader","shaderPrograms","glProgram","initialize","compile","setUniformValue","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getProjection","_getProjection","DefaultShader","vertexAttribPointer","_attrib","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","_setUniform","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","shaderProgram","destroy","getWebGL","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteTexture","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","cloneObjShallow","bytesPerPixel","_getBytesPerPixel","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","C2dCoreQuadOperation","getRenderContext","getSimpleTc","getWhite","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","getRgbaStringFromArray","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","restore","save","_equalScissorAreas","_restoreContext","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","mergeMultiColorsEqual","rgb","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","getRgbString","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","delta","addMemoryUsage","_hasCache","_getCache","prevMemUsage","memoryUsage","_addMemoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","getC2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","isWhite","setSimpleTc","hasSimpleTexCoords","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","loop","stopLoop","setInterval","updateFrame","idleFrame","clearInterval","startLoop","requestAnimationFrame","lp","switchLoop","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","getCompressedTextureExtensions","includes","imageSize","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","handleKtxLoad","handlePvrLoad","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","performance","now","changes","keyhandler","_keydownListener","_keyupListener","removeEventListener","clickHandler","_clickListener","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","cap","DITHER","_getDefaultFlag","change","program","va","equal","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","migrate","setProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","setFlag","normalized","stride","setActiveTexture","setPixelStorei","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","red","green","blue","_blendColor","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","_clearColor","_clearDepth","_clearStencil","_colorMask","_cullFace","_depthFunc","flag","_depthMask","zNear","zFar","_depthRange","_frontFace","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","_stencilFunc","_stencilMask","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","_vertexAttrib2f","_vertexAttrib2fv","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","_initStateManager","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","allowCleanup","_freeManagedTextureSource","managed","clearNativeTexture","TextureThrottler","_remove","_sources","_data","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","createCoreRenderState","createCoreRenderExecutor","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","execute","prec","_createRenderTexture","maxAge","limit","createRenderTexture","freeRenderTexture","copyRenderTexture","TransitionSettings","_timingFunction","getTimingFunction","TransitionManager","progress","isRunning","_toConsumableArray","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","getRgbaComponents","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","getArgbNumber","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getValue","getAnimatedElements","sv","getResetValue","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","play","STOPPED","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","createWebGLContext","createCanvasContext","_mode","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","opt","app","_updatingFrame","getHrTime","fixedDt","_calculateDt","processSome","nextFrame","getRgbaComponentsNormalized","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","freeUnusedRenderTextures","serviceprovider","addServiceProvider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","registerKeydownHandler","_receiveKeydown","registerKeyupHandler","_receiveKeyup","registerClickHandler","_receiveClick","registerHoverHandler","_receiveHover","_recieveScrollWheel","__options","setApplication","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_focus","_unfocus","_focusChange","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","_getFocused","newParts","events","focusPath","_getMostSpecificHandledMember","returnValue","keyCode","hasTimer","longpress","focusTopDownEvent","focusBottomUpEvent","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","getAncestors","_this5","elem","_handleUnhover","style","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","_this8","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","Tools","canvasFactory","content","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","url","createSvg","img","ObjMerger","__mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","isMf","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_get","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","ps","wasVisible","invisibleItem","getWrapper","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","redraw","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_textwrap","sel","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","_multiSpline","getSpline","_layers","_output","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","_buildLayers","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","first","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","C2dGrayscaleShader","WebGLDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","getElementWidth","getElementHeight","getVertexAttribPointerOffset","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}